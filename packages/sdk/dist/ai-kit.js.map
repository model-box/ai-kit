{
  "version": 3,
  "sources": ["../src/main.ts", "../src/const/index.ts"],
  "sourcesContent": ["import { COMPLETIONAPI } from \"./const\";\nimport { ChatCompletionReq, ChatCompletionRes } from \"./openAI/type\";\nexport interface AIKitOptions {\n  apiKey: string;\n  endpoint?: string;\n}\n\nclass AIKit {\n  private apiKey: string;\n  protected endpoint?: string;\n\n  constructor(options: AIKitOptions) {\n    const { apiKey, endpoint } = options;\n    this.apiKey = apiKey;\n    this.endpoint = endpoint;\n  }\n\n  public async getChatCompletion(request: ChatCompletionReq): Promise<ChatCompletionRes> {\n\n    const response = await fetch(this.endpoint || COMPLETIONAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n      },\n      body: JSON.stringify(request),\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n}\nexport { ChatCompletionReq, ChatCompletionRes };\n\nexport default AIKit;\n", "export const ENDPOINT = \"https://api.model.box\";\nexport const COMPLETIONAPI = \"https://api.model.box/v1/chat/completions\";\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACCO,MAAM,gBAAgB;;;ADM7B,MAAM,QAAN,MAAY;AAAA,IAIV,YAAY,SAAuB;AAHnC,0BAAQ;AACR,0BAAU;AAGR,YAAM,EAAE,QAAQ,SAAS,IAAI;AAC7B,WAAK,SAAS;AACd,WAAK,WAAW;AAAA,IAClB;AAAA,IAEA,MAAa,kBAAkB,SAAwD;AAErF,YAAM,WAAW,MAAM,MAAM,KAAK,YAAY,eAAe;AAAA,QAC3D,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB,UAAU,KAAK;AAAA,QAClC;AAAA,QACA,MAAM,KAAK,UAAU,OAAO;AAAA,MAC9B,CAAC;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,IAAI,MAAM,uBAAuB,SAAS,UAAU,SAAS,YAAY;AAAA,MACjF;AAEA,aAAO,SAAS,KAAK;AAAA,IACvB;AAAA,EAEF;AAGA,MAAO,eAAQ;",
  "names": []
}
